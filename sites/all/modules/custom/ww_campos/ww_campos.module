<?php

/**
 * @file
 * Este modulo es exclusivamente para crear campos y widgets.
 * 
 * Aqui tambien se aÃ±adio el trabajo con JQuery.
 */

/**
 * Implements hook_field_widget_info();
 */
function ww_campos_field_widget_info() {
  return array(
    'ww_link' => array(
      'label' => t('Link'),
      'field types' => array('text'),
    ),
  );
}

/**
 * Implements hook_field_widget_form();
 */
function ww_campos_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  $main_widget = array();
  switch ($instance['widget']['type']) {
    case 'ww_link':

      $main_widget = $element + array(
        '#type' => 'textfield',
        '#default_value' => isset($items[$delta]['value']) ? $items[$delta]['value'] : NULL,
        '#size' => 30,
        '#maxlength' => 100,
        '#attributes' => array('class' => array('text-full')),
      );
      break;
  }
  if ($main_widget) {
    // Conditionally alter the form element's type if text processing is enabled.
    if ($instance['settings']['text_processing']) {
      $element = $main_widget;
      $element['#type'] = 'text_format';
      $element['#format'] = isset($items[$delta]['format']) ? $items[$delta]['format'] : NULL;
      $element['#base_type'] = $main_widget['#type'];
    }
    else {
      $element['value'] = $main_widget;
    }
  }
  return $element;
}

/**
 * Implements hook_field_formatter_info();
 */
function ww_campos_field_formatter_info() {
  return array(
    'ww_link' => array(
      'label' => t('link fields'),
      'field types' => array('text'),
    ),
    'ww_colorbox' => array(
      'label' => t('mi colorbox'),
      'field types' => array('image'),
    ),
  );
}

/**
 * Implements hook_field_formatter_view();
 */
function ww_campos_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  $path = drupal_get_path("module", "ww_campos");
  switch ($display['type']) {

    case 'ww_link':
      foreach ($items as $delta => $item) {
        $element[$delta] = array('#markup' => l(strip_tags($item['value']), $item['value']));
      }
      break;
    case 'ww_colorbox':
      drupal_add_library("ww_campos", "colorbox");

      drupal_add_js($path . "/agregar_colorbox.js");

      foreach ($items as $delta => $item) {

        $direccion = file_create_url($item['uri']);

        $element[$delta] = array(
          '#theme' => 'image_formatter',
          '#prefix' => '<p><a id="group1" href="' . $direccion . '" title="Mi imagen en colorbox">',
          '#item' => $item,
          '#image_style' => 'miEstiloImage',
          '#suffix' => '</a></p>',
        );
      }
  }
  return $element;
}

/**
 * Implements hook_library();
 */
function ww_campos_library() {
  $libraries['colorbox'] = array(
    'title' => 'Libreria de colorbox',
    'website' => 'http://www.jacklmoore.com/colorbox/',
    'version' => '1.4.34',
    'js' => array(
      drupal_get_path('module', 'ww_campos') . '/colorbox/jquery.colorbox.js' => array(),
    ),
    'css' => array(
      drupal_get_path('module', 'ww_campos') . '/colorbox/example1/colorbox.css' => array(),
    ),
  );
  return $libraries;
}
