<?php

/**
 * @file
 * Installation file for the Usuario module.
 * 
 * Este documento esta muy raro con su coder.
 */

/**
 * Implements hook_menu().
 */
function usuario_menu() {
  $items['foto/usuario']=array(
    'title' => 'Photo of user',
    'description' => 'This is a form for upload the photo of user',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('subir_foto_form'),
    'access arguments' => array('manage administer photo'),
    'file' => 'usuario_form.inc',
  );
  //   $items['admin/config/content/foto']=array(
  //   'title' => 'Photo of user',
  //   'description' => 'This is a form for config the photo of user',
  //   'page callback' => 'drupal_get_form',
  //   'page arguments' => array('usuario_form_configure'),
  //   'access arguments' => array('manage administer photo'),
  //   'file' => 'usuario_form.inc',
  // );
  return $items;
}

/**
 * Implements hook_permission().
 */
function usuario_permission() {
  return array(
    'manage administer photo' => array(
    'title' => t('Change my photo'),
    'description' => t('Perform administration tasks for my module.'),
    ),
  );
}

/*
 * Implements hook_init().
 * 
 * Tambien existen las funciones hook_boot() y hook_preprocess_page() que cargan
 * en todas las paginas al igual que hook_init().
 */
function usuario_init() {
  global $user;
  
  $destination=drupal_get_destination();
    if (($destination['destination'] != 'foto/usuario' && $destination['destination'] != 'user/logout') && consultar_bd()) {
      drupal_set_message(t('Redirecting to Photo user'));
      //drupal_goto('foto/usuario');
    }

}

/**
 * Esta funcion consulta si existe un registro en la tabla datos_usuario, donde
 * pertenezca al usuario que actualmente esta logueado.
 * 
 * @global type $user
 * @return boolean
 */
function consultar_bd() {
  global $user;
  if (db_table_exists('datos_usuario')) {
  $query=db_select('datos_usuario', 'du')
    ->fields('du')
    ->condition('id_user', $user->uid)
    ->execute()
    ->fetchAssoc();
  if ($query == '') {
    return TRUE;
  }
  else {
    return FALSE;
  }
  }
}

/**
 * Implements hook_block_info().
 */
function usuario_block_info() {
  $blocks['foto_usuario'] = array(
    'info' => t('Mostrar foto usuario'),
    'region' => 'header',
    'visibility' => BLOCK_VISIBILITY_NOTLISTED, 
    'status' => 1, 
  );
  return $blocks;
}

/**
 * Implements hook_block_view(). 
 */
function usuario_block_view($delta = '') {
  $form = array();
  switch ($delta) {
    case 'foto_usuario':
      $block['subject'] = t('Photo of user');
      $block['content'] = bloque_foto();
      return $block;
      break;
    
  }
}

/**
 * Funcion que retorna un formulario que contiene la foto del usuario.  
 */
function bloque_foto() {
  global $user;
  $query = db_select('datos_usuario', 'du')
    ->fields('du')
    ->condition('id_user', $user->uid)
    ->execute()
    ->fetchAssoc();
  if ($query == '') {
    $file = file_load(variable_get('valor_defecto', 0));
  }
  else{
    $file = file_load($query['fid']);
  }
  $image = theme('image', array('path' => $file->uri, 'alt' => 'Alt text', 'height' => 100));
  $form['contact']['imagen']=array(
    '#markup' => $image  
  );
  return $form;
}
