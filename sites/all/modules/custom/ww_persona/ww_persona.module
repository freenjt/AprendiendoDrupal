<?php
/**
 * Implements hook_menu().
 */
function ww_persona_menu(){
  $items['datos/persona']=array(
    'title' => t('Example people'),
    'description' => t('This is example on data of people'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('people_form'),
    'access callback' => 'user_access',
    'access arguments' => array('manage administer'),
    'file' => 'ww_persona_forms.inc',
  );
  $items['listar/persona']=array(
    'title' => t('List of peoples'),
    'description' => t('This is a table with the people and their emails.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('people_list'),
    'access callback' => 'user_access',
    'access arguments' => array('view people'),
    //'file' => 'ww_persona_forms.inc',
  );
    $items['persona/edit/%']=array(
    'title' => t('Edit people'),
    'description' => t('This is a form for edit people'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('people_edit', 2),
    'access callback' => 'restringir_accesso',
    'access arguments' => array('edit people',2),
    'file' => 'ww_persona_forms.inc',
  );
    $items['persona/delete/%']=array(
    'title' => t('Delete people'),
    'description' => t('This is a form for drop people'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('people_delete', 2),
    'access callback' => 'restringir_accesso',
    'access arguments' => array('delete people',2),
    'file' => 'ww_persona_forms.inc',
  );
   $items['persona/tabledrag']=array(
    'title' => t('Table draggable'),
    'description' => t('This is a form for dragg tables'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('table_dragg_form'),
    'access callback' => TRUE,
    //'access arguments' => array('delete people',2),
    'file' => 'ww_persona_forms.inc',
  );
  return $items;
}

/**
 * Funcion del access callback
 */
function restringir_accesso($permiso, $valor){
   //user_access($permiso);
  $query = db_select('persona', 'p') 
    ->fields('p')
    ->condition('$id_people',$valor)
    ->execute() 
    ->fetchAll();
  if(count($query) <= 0){
    return FALSE;
  }
  else{
   return user_access($permiso);  
  }
  // dpm($query,'query');
}

function saludar_hola_mundo() {
  
  return "<p class='saludo'>Hola Funciona</p>";
}


/**
 * Implements hook_permission().
 */
function ww_persona_permission() {
  return array(
    'manage administer' => array(
      'title' => t('Administer my module'),
      'description' => t('Perform administration tasks for my module.'),
      ),
      'view people' => array(
      'title' => t('View list of people.'),
      'description' => t('Options for view list of people.'),
      ),
      'edit people' => array(
      'title' => t('Edit list of people.'),
      'description' => t('Options for edit list of people.'),
      ),
      'delete people' => array(
      'title' => t('Delete list of people.'),
      'description' => t('Options for delete list of people.'),
      ),
  );
}

/**
 * Implements Lista de personas
 */
function people_list($form, &$form_state) {  
  // create $header, where an array indicating row is  
  // cells have the following content
  //$form=array();
  $limit_peoples = variable_get('limit_list_people');
  $header_table_edit = array(  
  // first cell has the following text 'Id people'  
    t('Id people'),  
    // second cell has the following text 'Name people'
    t('Name people'),
    t('Email people'),
    t('Link Edit'),
    t('Link Delete'),
  ); 
  // make query to database where we choose numbers of nodes and the name from the table persona
  $verificar_nombre=(isset($form_state['input']['name'])) ? $form_state['input']['name'] : '';
  $query = db_select('persona', 'p')
    ->extend('PagerDefault') 
    ->fields('p')
    ->orderBy('weight', 'ASC')
    ->limit($limit_peoples);
  if($verificar_nombre != ''){
    $query = $query->condition('name_people', '%' . db_like($verificar_nombre) . '%', 'LIKE');
    dpm($verificar_nombre,'verificar_nombre');
  }
  $query = $query->execute() 
    ->fetchAll();
  if($verificar_nombre != '' && count($query)<=0){
    $arreglo=explode(" ", $verificar_nombre, 7);
     $query = db_select('persona', 'p')
    ->extend('PagerDefault') 
    ->fields('p')
    ->orderBy('weight', 'ASC')
    ->limit($limit_peoples);
     $or = db_or();
    for($i=0; $i<count($arreglo); $i++){
      $or=$or->condition('name_people', '%' . db_like($arreglo[$i]) . '%', 'LIKE');
      // $query = $query->condition('name_people', '%' . db_like($arreglo[$i]) . '%', 'LIKE')->condition($or);
    }
     $query = $query->condition($or)->execute() 
      ->fetchAll();
  }
  //output all our data from construction foreach  
  //dpm($query,'query');
  foreach ($query as $record_table_edit) { 
    //output a row that comtains 
    $rows_table_edit[] = array(  
      // in first cell there is an entry
      'data' => array(
          t($record_table_edit -> id_people),
          t($record_table_edit->name_people),
          t($record_table_edit->email_people),
          l(t('Edit'),'persona/edit/'.$record_table_edit->id_people),
          l(t('Delete'),'persona/delete/'.$record_table_edit->id_people) 
      ),  
    );  
  } 
  if(count($query) <= 0){
    $rows_table_edit=array();
  }
  // create $caption with row value 'Table of peoples'
  $caption_table_edit = t('Table of peoples'); 
  // create function theme, that has value 'table' and outputs
  $salida = theme('table',   
    array( 
      // table header is situated in $header_edit_table
      'header' => $header_table_edit,   
      // table body is in $rows_edit_table 
      'rows'     => $rows_table_edit,   
      // table caption will be in $caption_edit_table
      'caption' => $caption_table_edit
    ) 
  ); 
  $salida .= theme('pager');
  $build['content'] = array(
  'dummy1' => my_search_form($form, $form_state),
  'dummy2' => array('#markup' => $salida,),
  );
  dpm($build);
  $path = drupal_get_path('module', 'ww_persona');
  
  $build['#attached']['css'][] = $path . '/css/mi_estilo.css'; 
  //dpm($path . '/css/style.css');
  drupal_add_css($path . '/css/mi_estilo.css');
  return $build;
}

/**
 * Implements form
 */
function my_search_form($form, &$form_state) {
  $form['criteria'] = array(
    '#type' => 'fieldset',
    '#title' => 'Search Criteria',
    '#attributes' => array('class' => array('container-inline')),
  );

  $form['criteria']['name'] = array(
    '#type' => 'textfield',
    '#title' => t('Name people'),
    '#value' => (isset($form_state['input']['name'])) ? $form_state['input']['name'] : "",
    '#size' => 40,
    '#maxlength' => 20,
  );
$path = drupal_get_path('module', 'ww_persona');
    $form['#attached']['css'][] = $path . '/css/mi_estilo.css'; 
drupal_add_css($path . '/css/mi_estilo.css');
  $form['criteria']['submit'] = array(
    '#type' => 'submit',
    '#value' => 'search',
    //'#theme' => 'button',
    '#attributes' => array('class' => array('botones')),
    '#submit' => array('my_search_form_submit'),
  );
  
  return $form;
}

/**
 * Implements form submit
 */
function my_search_form_submit($form, &$form_state){
  //dpm($form,'form_state');
  if(!empty ($form_state)){
    //if($form_state['values']['name'])

    $form_state['rebuild'] = TRUE;
  }
  
}

/**
 * Implements hook_block_info
 */
function ww_persona_block_info(){
  
  $blocks['lista_personas'] = array(
    'info' => t('Lista personas'),
  );
  $blocks['hola_mundos'] = array(
    'info' => 'Bloque para Hola Mundo',
  );
  return $blocks;

}

/**
 * Implements hook_block_configure($delta='').
 */
function ww_persona_block_configure($delta){
  $form = array();
  dpm($delta,'delta');
  switch ($delta) {
  case 'lista_personas':
    $form['limit_list_people'] = array(
      '#type' => 'textfield',
      '#title' => t('Configure limit of list of people to Display'),
      // '#size' => 10,
      '#description' => t('Enter the limit for display in the table of peoples.'),
      '#default_value' => variable_get('limit_list_people', 3),
    );
  break;
 
  }
 
  return $form;
}

/**
 * Implements hook_block_save().
 */
function ww_persona_block_save($delta = '', $edit = array()){
  switch ($delta) {
  case 'lista_personas':
    variable_set('limit_list_people', (int)$edit['limit_list_people']);
  break;
 }
}
/**
 * Implements hook_block_view().
 */
function ww_persona_block_view($delta=''){
  //dpm($delta,'delta');
  switch($delta){
  case 'hola_mundo':
  $block['subject'] = t('Lista personas');
  $block['content'] = people_list();

  return $block;
  break;
  }
//    switch ($delta) {
//    case 'hola_mundo':
//      $block['content'] = saludar_hola_mundo();
//      return $block;   
//  }
 //return $block;
}

/**
 * Implements hook_theme().
 */
function ww_persona_theme() {
  return array(
    // Theme function for the 'simple' example.
    'table_dragg_form' => array(
      'render element' => 'form',
      'file' => 'ww_persona_forms.inc',
    ),
//    // Theme function for the 'parent/child' example.
//    'tabledrag_example_parent_form' => array(
//      'render element' => 'form',
//      'file' => 'tabledrag_example_parent_form.inc',
//    ),
  );
}

/**
 * Implements hook_form_alter().
 */
function ww_persona_form_alter($form, &$form_state, $form_id){
  if ($form_id == 'search_block_form') {
    $form['actions']['submit']['#attributes']['class'][] = 'button';
  }
}